Nama : Febby Novanti Azhara
NIM : 1182002002
Pemrograman Berorientasi Objek – TUGAS 3

Buatlah sebuah program berisi contoh:
1. Kelas abstrak.
2. Interface 
3. Beri rangkuman cara kerja program.

Jawab :
1. Kelas Abstrak
Kelas abstrak merupakan kelas yang masih dalam bentuk abstrak. Karena bentuknya masih abstrak, dia tidak bisa dibuat langsung menjadi objek. Sebuah kelas agar dapat disebut kelas abstrak setidaknya memiliki satu atau lebih method abstrak. Method abstrak adalah method yang tidak memiliki implementasi atau tidak ada bentuk konkritnya.
Berikut contoh program kelas abstrak :

Kelas komponen.java
package app.klsabstrak;

public abstract class komponen {
    
    //Method Abstrak
    abstract void bahankulit();
    abstract void bahanfla();
    abstract void proses_pembuatan();
}

Kelas membuatkue.java
package app.klsabstrak;

public class membuatkue extends komponen{
    public static void main(String[] args){
        //Membuat Instance/Objek dari Class Mambuat_Kue
        membuatkue kue = new membuatkue();
        kue.bahankulit();
        kue.bahanfla();
        kue.proses_pembuatan();
    }
   
    @Override
    void bahankulit() {
        String bahan1 = "Tepung Terigu";
        String bahan2 = "Mentega";
        String bahan3 = "Telur";
        System.out.println("====== RESEP PIE SUSU ======");
        System.out.println("====== BAHAN-BAHAN ======");
        System.out.println("1."+bahan1);
        System.out.println("2."+bahan2);
        System.out.println("3."+bahan3);
    }

    @Override
    void bahanfla() {
        String bahanfla1 = "Susu Full Cream";
        String bahanfla2 = "Kuning Telur";
        String bahanfla3 = "Susu Kental Manis";
        System.out.println("====== ALAT-ALAT ======");
        System.out.println("1."+bahanfla1);
        System.out.println("2."+bahanfla2);
        System.out.println("3."+bahanfla3);
    }

    @Override
    void proses_pembuatan() {
        System.out.println("====== PROSES ======");
        System.out.println("1.Membuat Kulit pie dengan mencapur bahan bahan kulit");
        System.out.println("2.Adonkan adonan kulit hingga kalis");
        System.out.println("3.Tempatkan adonan kulit diatas teflon(ratakan membentuk bulat teflon)");
        System.out.println("4.Tusuk - tusuk kulit yang sudah di ratakan di teflon dengan garpu");
        System.out.println("5.Membuat fla dengan mencapur bahan bahan fla, kemudian aduk hinga semua tercampur");
        System.out.println("6.Taruh fla diatas kulit pie sambil di saring saat menuangkannya");
        System.out.println("7.Masak dengan api sedang hingga isi pie mengkeras, pastikan agar kulit pie tidak gosong");
    }
}






Berikut hasil run dari kodingan di atas :

2. Interface
	Interface terdiri dari dua kata yaitu Inter(antar) dan Face(muka), jadi interface merupakan antramuka yang berfungsi sebagai penghubung antara sesuatu yang abstrak dengan sesuatu yang nyata.

Berikut contoh program interface :

Kelas Phone.java
package app.interfacecoba;

public interface Phone {
    int MAX_VOLUME = 100;
    int MIN_VOLUME = 0;
    
    void powerOn();
    void powerOff();
    void volumeUp();
    void volumeDown();
}

Kelas PhoneUser.java
package app.interfacecoba;

public class PhoneUser {
    
    private Phone phone;

    public PhoneUser(Phone phone) {
        this.phone = phone;
    }
    
    void turnOnThePhone(){
        this.phone.powerOn();
    }
    
    void turnOffThePhone(){
        this.phone.powerOff();
    }
    
    void makePhoneLouder(){
        this.phone.volumeUp();
    }
    
    void makePhoneSilent(){
        this.phone.volumeDown();
    }
}

Kelas Samsung.java
package app.interfacecoba;
public class Samsung implements Phone {

    private int volume;
    private boolean isPowerOn;

    public Samsung() {
        // set volume awal
        this.volume = 50;
    }

    @Override
    public void powerOn() {
        isPowerOn = true;
        System.out.println("Handphone menyala...");
        System.out.println("Selamat datang di SAMSUNG");
        System.out.println("Android version 29");
    }

    @Override
    public void powerOff() {
        isPowerOn = false;
        System.out.println("Handphone dimatikan");
    }

    @Override
    public void volumeUp() {
        if (isPowerOn) {
            if (this.volume == MAX_VOLUME) {
                System.out.println("Volume FULL!!");
                System.out.println("sudah " + this.getVolume() + "%");
            } else {
                this.volume += 10;
                System.out.println("Volume sekarang: " + this.getVolume());
            }
        } else {
            System.out.println("Nyalakan dulu donk HP-nya!!");
        }
    }

    @Override
    public void volumeDown() {
        if (isPowerOn) {
            if (this.volume == MIN_VOLUME) {
                System.out.println("Volume = 0%");
            } else {
                this.volume -= 10;
                System.out.println("Volume sekarang: " + this.getVolume());
            }
        } else {
            System.out.println("Nyalakan dulu donk HP-nya!!");
        }
    }

    public int getVolume() {
        return this.volume;
    }

}

Kelas Main.java
package app.interfacecoba;

import java.util.Scanner;
public class Main {

    public static void main(String[] args) {
        
        // membuat objek HP
        Phone samsungA50 = new Samsung();

        // membuat objek user
        PhoneUser dian = new PhoneUser(samsungA50);

        // kita coba nyalakan HP-nya
        dian.turnOnThePhone();
        
        // biar enak, kita buat dalam program
        Scanner scan = new Scanner(System.in);
        String aksi; 

        while (true) {
            System.out.println("=== APLIKASI INTERFACE ===");
            System.out.println("[1] Nyalakan HP");
            System.out.println("[2] Matikan HP");
            System.out.println("[3] Perbesar Volume");
            System.out.println("[4] Kecilkan Volume");
            System.out.println("[0] Keluar");
            System.out.println("--------------------------");
            System.out.print("Pilih aksi> ");
            aksi = scan.nextLine();
            
            if(aksi.equalsIgnoreCase("1")){
                dian.turnOnThePhone();
            } else if (aksi.equalsIgnoreCase("2")){
                dian.turnOffThePhone();
            } else if (aksi.equalsIgnoreCase("3")){
                dian.makePhoneLouder();
            } else if (aksi.equalsIgnoreCase("4")){
                dian.makePhoneSilent();
            } else if (aksi.equalsIgnoreCase("0")){
                System.exit(0);
            } else {
                System.out.println("Kamu memilih aksi yang salah!");
            }
        }

    }

}
